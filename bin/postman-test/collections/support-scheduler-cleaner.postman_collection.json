{
	"info": {
		"_postman_id": "9246f276-8b64-4104-97d3-96f645c73070",
		"name": "support-scheduler-cleaner",
		"description": "Cleans the support scheduler interval(s), and intervalAction(s) test data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "clean intervalAction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6be00294-4dd9-49d9-94ed-925ffb50a6cb",
						"exec": [
							"var baseUrl = pm.environment.get(\"baseUrl\");",
							"var request = {",
							"  url: baseUrl+'/api/v1/intervalaction',",
							"  method: 'GET',",
							"};",
							"request = utils.checkToken(request);",
							"",
							"pm.sendRequest(request, function (err, res) {",
							"    removeData(res.json())",
							"});",
							"",
							"function removeData(data){",
							"    var request = {",
							"      method: 'DELETE'",
							"    };",
							"    request = utils.checkToken(request);",
							"    ",
							"    var count = 0;",
							"    var failedCount = 0;",
							"    data.forEach(function(item, index) { ",
							"        request.url = baseUrl+'/api/v1/intervalaction/'+item.id;",
							"        pm.sendRequest(request, function (err, res) {",
							"          if (res.code!=200) {",
							"                console.log(index, res.stream.toString());",
							"                failedCount++",
							"            }else{",
							"                count++",
							"            }",
							"        });",
							"    });",
							"",
							"    var interval = setInterval(function(){",
							"        if(count+failedCount == data.length){",
							"            clearInterval(interval);",
							"            console.log(count +\" rows removed\");",
							"            console.log(failedCount +\" rows remove failed\");",
							"        }",
							"    }, 500);",
							"    ",
							"}",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/ping",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"ping"
					]
				},
				"description": "cleans existing interval(s) tests data"
			},
			"response": []
		},
		{
			"name": "clean interval",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6be00294-4dd9-49d9-94ed-925ffb50a6cb",
						"exec": [
							"var baseUrl = pm.environment.get(\"baseUrl\");",
							"var request = {",
							"  url: baseUrl+'/api/v1/interval',",
							"  method: 'GET',",
							"};",
							"request = utils.checkToken(request);",
							"",
							"pm.sendRequest(request, function (err, res) {",
							"    removeData(res.json())",
							"});",
							"",
							"function removeData(data){",
							"    var request = {",
							"      method: 'DELETE'",
							"    };",
							"    request = utils.checkToken(request);",
							"    ",
							"    var count = 0;",
							"    var failedCount = 0;",
							"    data.forEach(function(item, index) { ",
							"        request.url = baseUrl+'/api/v1/interval/'+item.id;",
							"        pm.sendRequest(request, function (err, res) {",
							"          if (res.code!=200) {",
							"                console.log(index, res.stream.toString());",
							"                failedCount++",
							"            }else{",
							"                count++",
							"            }",
							"        });",
							"    });",
							"",
							"    var interval = setInterval(function(){",
							"        if(count+failedCount == data.length){",
							"            clearInterval(interval);",
							"            console.log(count +\" rows removed\");",
							"            console.log(failedCount +\" rows remove failed\");",
							"        }",
							"    }, 500);",
							"    ",
							"}",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/ping",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"ping"
					]
				},
				"description": "cleans existing interval(s) tests data"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bd833788-489a-4ecb-a2bc-ce2b0367cc47",
				"type": "text/javascript",
				"exec": [
					"utils = {",
					"    checkToken: function(request) {",
					"        var accessToken = pm.globals.get(\"accessToken\");",
					"        if (accessToken !== undefined) {",
					"            var header = {",
					"                authorization: 'Bearer '+accessToken",
					"            };",
					"            request.header = header;   ",
					"        }",
					"        return request;",
					"    }",
					"};",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2e1c7ca1-bd45-4022-bf44-42a79db08604",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}